(()=>{"use strict";function t(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=Array(e);n<e;n++)r[n]=t[n];return r}function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function n(t){var n=function(t){if("object"!=e(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=e(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(n)?n:n+""}function r(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,n(o.key),o)}}new(function(){return e=function t(e){var n,r;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.sections=document.querySelectorAll(e),this.halfWindow=.6*window.innerHeight,this.checkDistance=(n=this.checkDistance.bind(this),function(){for(var t=arguments.length,e=new Array(t),o=0;o<t;o++)e[o]=arguments[o];r&&clearTimeout(r),r=setTimeout((function(){n.apply(void 0,e),r=null}),20)})},(n=[{key:"getDistance",value:function(){var e=this;this.distance=function(e){return function(e){if(Array.isArray(e))return t(e)}(e)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(e)||function(e,n){if(e){if("string"==typeof e)return t(e,n);var r={}.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(e,n):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(this.sections).map((function(t){var n=t.offsetTop;return{element:t,offset:Math.floor(n-e.halfWindow)}}))}},{key:"checkDistance",value:function(){this.distance.forEach((function(t){window.scrollY>t.offset&&t.element.classList.add("active")}))}},{key:"init",value:function(){this.getDistance(),this.checkDistance(),window.addEventListener("scroll",this.checkDistance)}}])&&r(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}())("[data-anime='scroll']").init()})();